# CI config 

# shared key for the python jobs to not have redundant config parameters
# PROJECT, TESTSDIR, SRCDIR are used in the tox.ini
# cp -no-clobber copies files but doesn't overwrite existing ones (e.g. sonar property settings)
.python_defaults: &py_anchor  # using anchor magic
  image: registry.gitlab.semanticlab.net/docker/py3full:3.10
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive --remote
    - cp wl_python_utils/python3/* .
    - sed -i s/-dev/".$(date +%Y%m%d.%H%M)"/g pyproject.toml
    - if test -f "version.txt"; then cat version.txt; else poetry version | awk {'print $2'} > version.txt; fi
    - export PROJECT=`poetry version | awk {'print $1'}`
    - export VERSION=`poetry version | awk {'print $2'}`
    - export TESTSDIR=src/python/weblyzard_api/tests/always_run/
    - export SRCDIR=src/python/weblyzard_api/
    - python3.10 -m pip install tox
  tags:
    - docker

stages:
  - test-python
  - test-java
  - deploy
  - build-package

pytest:
  <<: *py_anchor  # we reference the anchor here
  stage: test-python
  only:
    - branches
  script:
    - poetry config repositories.wlt_nexus ${NEXUS_URL}
    - poetry config http-basic.wlt_nexus ${NEXUS_USER} ${NEXUS_PW}
    - poetry lock
    - poetry install
    - poetry run pytest tests
    - sonar-scanner -D sonar.host.url=${sonarhost} -D sonar.login=${sonarlogin}

pylint:
  <<: *py_anchor
  stage: test-python
  only:
    - branches
  script:
    - tox -q -e pylint
  when: manual

vulture:
  <<: *py_anchor
  stage: test-python
  only:
    - branches
  script:
    - tox -q -e vulture
  when: manual


job_build_package:
  stage: build-package
  script:
    - chmod +x build-package.sh
    - ./build-package.sh
  only:
    - master
  tags:
    - backend-runner
  when: manual

sonarqube_preview:
  script:
    - git checkout origin/master
    - git merge $CI_COMMIT_SHA --no-commit --no-ff
    - export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/"
    - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install -Dmaven.test.failure.ignore=false -U -DskipITs -Dgpg.skip
    - mvn --batch-mode verify sonar:sonar -Dsonar.branch.name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_PATH -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.gitlab.ref_name=$CI_COMMIT_SHA -DskipITs -Dgpg.skip
  stage: test-java
  except:
    - develop
    - master
    - /^hotfix_.*$/
    - /.*-hotfix$/
  tags:
    - java10

sonarqube:
  script:
    - export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/"
    - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install -Dmaven.test.failure.ignore=false -U -DskipITs -Dgpg.skip
    - mvn --batch-mode verify sonar:sonar -DskipITs -Dgpg.skip
  stage: test-java
  only:
    - master
    - develop
  tags:
    - java10

code_semanticlab_net_deploy:
  script:
    - pwd
    - echo "=================================="
    - export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/"
    - mvn clean
    - mvn deploy -U -DskipITs -Dgpg.skip
    - echo "=================================="
  stage: deploy
  only:
    - master
  tags:
    - java10
